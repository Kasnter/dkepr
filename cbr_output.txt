contextClass("aimCtx").
businessCaseClass("semNOTAMCASE").

hasParameter("contextClass","Parameter_Wozvke"). 
hasParameter("contextClass","Parameter_Sqsggr"). 
hasParameter("contextClass","Parameter_Abomdm"). 

parameter("Parameter_Wozvke").
parameter("Parameter_Sqsggr").
parameter("Parameter_Abomdm").

% -----------------------------------------------------------------------------
% DEFINING PARAMETERS, PARAMETER VALUES, CONTEXTS, AND DETpARAMvALUE
% -----------------------------------------------------------------------------
% Parameter values and their hierarchy
paramValue("Parameter_Wozvke","ParamValue_Nhzlih").paramValue("Parameter_Wozvke","ParamValue_Cexjqo").paramValue("Parameter_Wozvke","ParamValue_Pxlehf").
paramValue("Parameter_Sqsggr","ParamValue_Weoois").paramValue("Parameter_Sqsggr","ParamValue_Lnupxd").paramValue("Parameter_Sqsggr","ParamValue_Fjhahp").
paramValue("Parameter_Abomdm","ParamValue_Mwbvla").paramValue("Parameter_Abomdm","ParamValue_Xvpjsh").paramValue("Parameter_Abomdm","ParamValue_Foowmv").

covers("ParamValue_Nhzlih","ParamValue_Cexjqo"). covers("ParamValue_Nhzlih","ParamValue_Pxlehf"). 
covers("ParamValue_Weoois","ParamValue_Lnupxd"). covers("ParamValue_Weoois","ParamValue_Fjhahp"). 
covers("ParamValue_Mwbvla","ParamValue_Xvpjsh"). covers("ParamValue_Mwbvla","ParamValue_Foowmv"). 

%Contexts
context("ctx0"). hasName("ctx0","ParamValue_Pxlehf_ParamValue_Lnupxd_ParamValue_Xvpjsh"). hasModule("ctx0","module0"). hasContextClass("ctx0","aimCtx"). 
hasParamValue("ctx0","Parameter_Wozvke","ParamValue_Pxlehf"). hasParamValue("ctx0","Parameter_Sqsggr","ParamValue_Lnupxd"). hasParamValue("ctx0","Parameter_Abomdm","ParamValue_Xvpjsh"). 
context("ctx1"). hasName("ctx1","ParamValue_Pxlehf_ParamValue_Lnupxd_ParamValue_Xvpjsh"). hasModule("ctx1","module1"). hasContextClass("ctx1","aimCtx"). 
hasParamValue("ctx1","Parameter_Wozvke","ParamValue_Pxlehf"). hasParamValue("ctx1","Parameter_Sqsggr","ParamValue_Lnupxd"). hasParamValue("ctx1","Parameter_Abomdm","ParamValue_Xvpjsh"). 
context("ctx2"). hasName("ctx2","ParamValue_Pxlehf_ParamValue_Fjhahp_ParamValue_Foowmv"). hasModule("ctx2","module2"). hasContextClass("ctx2","aimCtx"). 
hasParamValue("ctx2","Parameter_Wozvke","ParamValue_Pxlehf"). hasParamValue("ctx2","Parameter_Sqsggr","ParamValue_Fjhahp"). hasParamValue("ctx2","Parameter_Abomdm","ParamValue_Foowmv"). 

 % Determine Parameter Values
detParamValue(BC,"Parameter_Wozvke","Val") :- businessCase(BC), hasDescProp(BC,"DescProp_Wohdix",Val).
detParamValue(BC,"Parameter_Sqsggr","Val") :- businessCase(BC), hasDescProp(BC,"DescProp_Siqmsk",Val).
detParamValue(BC,"Parameter_Abomdm","Val") :- businessCase(BC), hasDescProp(BC,"DescProp_Tqiiig",Val).

businessCase("bc0"). hasDescProp("bc0", "DescProp_Wohdix", "ParamValue_Pxlehf").
businessCase("bc0"). hasDescProp("bc0", "DescProp_Siqmsk", "ParamValue_Weoois").
businessCase("bc0"). hasDescProp("bc0", "DescProp_Tqiiig", "ParamValue_Xvpjsh").

businessCase("bc1"). hasDescProp("bc1", "DescProp_Wohdix", "ParamValue_Pxlehf").
businessCase("bc1"). hasDescProp("bc1", "DescProp_Siqmsk", "ParamValue_Fjhahp").
businessCase("bc1"). hasDescProp("bc1", "DescProp_Tqiiig", "ParamValue_Xvpjsh").

businessCase("bc2"). hasDescProp("bc2", "DescProp_Wohdix", "ParamValue_Pxlehf").
businessCase("bc2"). hasDescProp("bc2", "DescProp_Siqmsk", "ParamValue_Weoois").
businessCase("bc2"). hasDescProp("bc2", "DescProp_Tqiiig", "ParamValue_Foowmv").


% -----------------------------------------------------------------------------
% DERIVING RELATIONSHIPS OF PARAM VALUES AND CONTEXTS
% -----------------------------------------------------------------------------
% transitive and transitive-reflexive covers
tCovers(Pval,Cval) :- tCovers(Pval,X), covers(X,Cval).
tCovers(Pval,Cval) :- covers(Pval,Cval).
trCovers(Pval,Cval) :- tCovers(Pval,Cval). trCovers(Pval,Pval):- paramValue(_,Pval).

% Context Hierarchy
paramCover(P,C,Param):- hasParamValue(C,Param,Pval), hasParamValue(P,Param,Pval2), trCovers(Pval2,Pval).
notParamCover(C,P,Param):- context(C), hasContextClass(C,CtxCl), hasParameter(CtxCl,Param), context(P), not paramCover(C,P,Param).
ctxInherits(C,P) :- paramCover(P,C,_), not notParamCover(P,C,_).


% -----------------------------------------------------------------------------
% DETERMINE RELEVANT CONTEXTS AND THE MOST SPECIFIC RELEVANT CONTEXT
% -----------------------------------------------------------------------------
bcParamCover(BC,Ctx,Param) :- hasParamValue(Ctx,Param,PVal), detParamValue(BC,Param,PVal2), trCovers(PVal,PVal2).
notBcParamCover(BC,Ctx,Param) :- businessCase(BC), context(Ctx), hasContextClass(Ctx,CtxCl), hasParameter(CtxCl,Param), not bcParamCover(BC,Ctx,Param).
detRelevantCtxs(BC,Ctx) :- bcParamCover(BC,Ctx,X), not notBcParamCover(BC,Ctx,Y).

hasRelevantDescendant(BC,Ctx) :- detRelevantCtxs(BC,Ctx), detRelevantCtxs(BC,Ctx2), ctxInherits(Ctx2,Ctx), not w_ctxIdent(Ctx,Ctx2), Ctx!=Ctx2.
detMostSpecificCtx(BC,Ctx) :- detRelevantCtxs(BC,Ctx), not hasRelevantDescendant(BC,Ctx).

@output("detMostSpecificCtx"). @post("detMostSpecificCtx","orderby(1,2)").
@output("detRelevantCtxs"). @post("detRelevantCtxs","orderby(1,2)").

% -----------------------------------------------------------------------------
% WARNINGS
% -----------------------------------------------------------------------------
w_incompleteCtxSpec(C) :- parameter(P), context(C), not hasParamValue(C,P,_).
@output("w_incompleteCtxSpec").

ctxDiffParamValue(Ctx1,Ctx2) :- context(Ctx1), context(Ctx2), hasParamValue(Ctx1,P,PVal1), hasParamValue(Ctx2,P,PVal2), PVal1!=PVal2.
w_ctxIdent(Ctx1,Ctx2) :- context(Ctx1), context(Ctx2), not ctxDiffParamValue(Ctx1,Ctx2),Ctx1!=Ctx2.
@output("w_ctxIdent").

